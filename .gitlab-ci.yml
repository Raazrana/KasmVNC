image: docker
services:
  - docker:dind

variables:
  GITLAB_SHARED_DIND_DIR: /builds/$CI_PROJECT_PATH/shared
  GIT_FETCH_EXTRA_FLAGS: --tags

stages:
  - upload
  - build

.prepare_build: &prepare_build
  - ls -l
  - pwd
  - apk add bash
  - mkdir -p "$GITLAB_SHARED_DIND_DIR" && chmod 777 "$GITLAB_SHARED_DIND_DIR"
  - if echo "$CI_COMMIT_BRANCH" | grep -Eq '(release|testing)'; then export BUILD_ALL_DISTROS=1; fi

.prepare_artfacts: &prepare_artfacts
  - mkdir output
  - cp -r builder/build/* output/
  - rm output/*.tar.gz

build_ubuntu_bionic:
  stage: build
  before_script:
    - *prepare_build
  after_script:
    - *prepare_artfacts
  script:
    - bash builder/build-distro ubuntu bionic
  artifacts:
    paths:
      - output/

build_ubuntu_focal:
  stage: build
  before_script:
    - *prepare_build
  after_script:
    - *prepare_artfacts
  script:
    - if [ -n "$BUILD_ALL_DISTROS" ]; then
        bash builder/build-distro ubuntu focal;
      fi
  artifacts:
    paths:
      - output/

build_debian_buster:
  stage: build
  before_script:
    - *prepare_build
  after_script:
    - *prepare_artfacts
  script:
    - if [ -n "$BUILD_ALL_DISTROS" ]; then
        bash builder/build-distro debian buster;
      fi
  artifacts:
    paths:
      - output/

build_debian_bullseye:
  stage: build
  before_script:
    - *prepare_build
  after_script:
    - *prepare_artfacts
  script:
    - if [ -n "$BUILD_ALL_DISTROS" ]; then
        bash builder/build-distro debian bullseye;
      fi
  artifacts:
    paths:
      - output/

build_kali_rolling:
  stage: build
  before_script:
    - *prepare_build
  after_script:
    - *prepare_artfacts
  script:
    - if [ -n "$BUILD_ALL_DISTROS" ]; then
        bash builder/build-distro kali kali-rolling;
      fi
  artifacts:
    paths:
      - output/

build_centos7:
  stage: build
  before_script:
    - *prepare_build
  after_script:
    - *prepare_artfacts
  script:
    - bash builder/build-distro centos core
  artifacts:
    paths:
      - output/

upload:
  stage: upload
  image: ubuntu:focal
  script:
    - apt-get update
    - apt-get install -y ruby2.7 git
    - if echo $CI_COMMIT_REF_NAME | grep -Pq '^release/([\d.]+)$'; then
        export RELEASE_BRANCH=1;
      fi
    - export RELEASE_VERSION="$(.ci/next_release_version)"
    - export SANITIZED_BRANCH="$(echo $CI_COMMIT_REF_NAME | sed 's/\//_/g')"
    - export S3_BUILD_DIRECTORY="kasmvnc/${CI_COMMIT_SHA}"
    - .ci/detect_os_arch_package_format output/buster/kasmvncserver_0.9.1~beta-1_amd64.deb > /tmp/os_arch_package_format
    - source /tmp/os_arch_package_format
    - if [ -n "$RELEASE_BRANCH" ]; then
        export BUILD_FILE="kasmvncserver_${PACKAGE_OS}_${RELEASE_VERSION}_${OS_ARCH}.${PACKAGE_FORMAT}";
      else
        export BUILD_FILE="kasmvncserver_${PACKAGE_OS}_${RELEASE_VERSION}_${SANITIZED_BRANCH}_${CI_COMMIT_SHA:0:6}_${OS_ARCH}.${PACKAGE_FORMAT}";
      fi
    - echo $BUILD_FILE
